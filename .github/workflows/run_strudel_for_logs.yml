name: run-e2e-tests-on-docker
# source: https://github.com/marketplace/actions/install-poetry-action


on:
  push:
    branches: [ "main" ]

jobs:
  e2e-tests-docker:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Clone the Strudel manager Repository
        run: |
          echo $PWD
          export current_dir=$(pwd)
          cd /tmp
          git clone https://github.com/strudel-ai/strudel-public.git
          cd strudel-public
          ls -alt
          cd $current_dir
          echo $PWD
      - name: Install python
        uses: actions/setup-python@v5
        with:
         python-version: '3.10.12'

#      - name: install poetry
#        run: echo "install poetry"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.STRUDEL_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.STRUDEL_ECR_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
#      - name: pull strudel image
#        id: pull-strudel-image
#        run: |
#            echo "pulling strudel image"
#            docker pull ${{ steps.login-ecr.outputs.registry }}/shtruddel:latest
#
#      - name: pull nginx
#        id: pull-nginx-image
#        run: |
#            echo "pulling nginx image"
#            docker pull nginx
        
      - name: run docker compose
        run: |
            docker compose -f docker_compose_run.yml up -d
            sleep 10

      - name: run strudel sanity test
        run: |
            echo "start sanity test"
            export STATUSCODE=$(curl --silent --output /dev/stderr --write-out "%{http_code}" --location '127.0.0.1:8080/add_logs/' \
            --header 'X-Request-Id: 7' \
            --header 'Content-Type: application/json' \
            --data '{"source": "test",
            "file_content": "def foo():\n  print(a)",
            "file_name": "test"}')
            printf "\n\n****   status code is $STATUSCODE \n\n"
            if [ $STATUSCODE -ne 200 ]; then echo "sanity test fails, status $STATUSCODE"; fi
            if [ $STATUSCODE -ne 200 ]; then exit 22; fi
            echo "**** end sanity test"
            echo "**** end run strudel"
